#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–π —Å —Ä–∞–∑–Ω—ã–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
"""

import os
import sys
import django
from django.conf import settings
from django.core.management import execute_from_command_line


def test_sqlite_migrations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å SQLite"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å SQLite...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è SQLite
    os.environ['USE_POSTGRES'] = 'no'
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–π
        execute_from_command_line(['manage.py', 'migrate', '--plan'])
        print("‚úÖ –ü–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è SQLite —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        execute_from_command_line(['manage.py', 'migrate'])
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è SQLite —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ SQLite: {e}")
        return False


def test_postgresql_migrations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å PostgreSQL"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å PostgreSQL...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL
    os.environ['USE_POSTGRES'] = 'yes'
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–π
        execute_from_command_line(['manage.py', 'migrate', '--plan'])
        print("‚úÖ –ü–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è PostgreSQL —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        execute_from_command_line(['manage.py', 'migrate'])
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è PostgreSQL —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ PostgreSQL: {e}")
        return False


def test_database_type_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
        from interface.utils import get_database_type
        
        # –¢–µ—Å—Ç –¥–ª—è SQLite
        os.environ['USE_POSTGRES'] = 'no'
        django.setup()
        sqlite_type = get_database_type()
        print(f"‚úÖ SQLite —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫: {sqlite_type}")
        
        # –¢–µ—Å—Ç –¥–ª—è PostgreSQL
        os.environ['USE_POSTGRES'] = 'yes'
        django.setup()
        postgresql_type = get_database_type()
        print(f"‚úÖ PostgreSQL —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫: {postgresql_type}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ë–î: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–π")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Cyberpolygon.settings')
    django.setup()
    
    results = []
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    results.append(test_database_type_detection())
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ SQLite
    results.append(test_sqlite_migrations())
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ PostgreSQL
    results.append(test_postgresql_migrations())
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    
    if all(results):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å –æ–±–µ–∏–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")
        return 1


if __name__ == '__main__':
    sys.exit(main())
