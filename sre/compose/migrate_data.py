#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ PostgreSQL
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ env.example
"""

import os
import sys
import subprocess
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ env.example
DB_CONFIG = {
    'POSTGRES_DB': 'cyberpolygon',
    'POSTGRES_USER': 'postgres', 
    'POSTGRES_PASSWORD': 'postgres',
    'POSTGRES_HOST': 'localhost',
    'POSTGRES_PORT': '5431'
}

def set_env_vars():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL"""
    os.environ['USE_POSTGRES'] = 'yes'
    os.environ['DB_USER'] = DB_CONFIG['POSTGRES_USER']
    os.environ['DB_PASSWORD'] = DB_CONFIG['POSTGRES_PASSWORD']
    os.environ['DB_HOST'] = DB_CONFIG['POSTGRES_HOST']
    os.environ['DB_NAME'] = DB_CONFIG['POSTGRES_DB']
    os.environ['DB_PORT'] = DB_CONFIG['POSTGRES_PORT']
    os.environ['PNET_URL'] = ''

def clear_env_vars():
    """–û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SQLite"""
    env_vars = ['USE_POSTGRES', 'DB_USER', 'DB_PASSWORD', 'DB_HOST', 'DB_NAME', 'DB_PORT']
    for var in env_vars:
        if var in os.environ:
            del os.environ[var]

def run_command(cmd, cwd=None):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"–í—ã–ø–æ–ª–Ω—è—é: {cmd}")
    result = subprocess.run(cmd, shell=True, cwd=cwd, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"–û—à–∏–±–∫–∞: {result.stderr}")
        return False
    print(f"–£—Å–ø–µ—à–Ω–æ: {result.stdout}")
    return True

def main():
    print("üöÄ –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ PostgreSQL...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ SQLite –±–∞–∑—ã
    sqlite_db = project_root / 'db.sqlite3'
    if not sqlite_db.exists():
        print("‚ùå –§–∞–π–ª db.sqlite3 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω SQLite —Ñ–∞–π–ª: {sqlite_db}")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–∞–º–ø–∞
    dump_file = project_root / 'temp_dump.json'
    
    try:
        # –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SQLite
        clear_env_vars()
        
        # 1. –°–æ–∑–¥–∞–µ–º –¥–∞–º–ø –∏–∑ SQLite —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏
        print("\nüì§ –°–æ–∑–¥–∞—é –¥–∞–º–ø –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite...")
        
        # –î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º chcp –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–∏
        if os.name == 'nt':  # Windows
            dump_cmd = f"chcp 65001 > nul && python manage.py dumpdata --exclude auth.permission --exclude contenttypes --indent 2 > {dump_file}"
        else:  # Unix/Linux
            dump_cmd = f"python manage.py dumpdata --exclude auth.permission --exclude contenttypes --indent 2 > {dump_file}"
        
        if not run_command(dump_cmd, cwd=project_root):
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–º–ø–∞!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –¥–∞–º–ø–∞ —Å–æ–∑–¥–∞–ª—Å—è –∏ –Ω–µ –ø—É—Å—Ç–æ–π
        if not dump_file.exists():
            print("‚ùå –§–∞–π–ª –¥–∞–º–ø–∞ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!")
            return
        
        file_size = dump_file.stat().st_size
        if file_size == 0:
            print("‚ùå –§–∞–π–ª –¥–∞–º–ø–∞ –ø—É—Å—Ç–æ–π!")
            return
        
        print(f"‚úÖ –î–∞–º–ø —Å–æ–∑–¥–∞–Ω: {dump_file} ({file_size} –±–∞–π—Ç)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞
        print("\nüîß –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞ –¥–∞–º–ø–∞...")
        try:
            with open(dump_file, 'r', encoding='utf-8') as f:
                content = f.read()
        except UnicodeDecodeError:
            print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π, –∏—Å–ø—Ä–∞–≤–ª—è—é...")
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
            encodings = ['cp1251', 'latin1', 'iso-8859-1']
            content = None
            
            for encoding in encodings:
                try:
                    with open(dump_file, 'r', encoding=encoding) as f:
                        content = f.read()
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π {encoding}")
                    break
                except UnicodeDecodeError:
                    continue
            
            if content is None:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –Ω–∏ —Å –æ–¥–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π!")
                return
            
            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ UTF-8
            with open(dump_file, 'w', encoding='utf-8') as f:
                f.write(content)
            print("‚úÖ –§–∞–π–ª –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ UTF-8")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL
        set_env_vars()
        
        # 2. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ PostgreSQL
        print("\nüîÑ –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ PostgreSQL...")
        if not run_command("python manage.py migrate", cwd=project_root):
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π!")
            return
        
        # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ PostgreSQL
        print("\nüì• –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –≤ PostgreSQL...")
        if not run_command(f"python manage.py loaddata {dump_file.name}", cwd=project_root):
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö!")
            return
        
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {DB_CONFIG['POSTGRES_DB']}")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {DB_CONFIG['POSTGRES_USER']}")
        print(f"üåê –•–æ—Å—Ç: {DB_CONFIG['POSTGRES_HOST']}:{DB_CONFIG['POSTGRES_PORT']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if dump_file.exists():
            dump_file.unlink()
            print("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")

if __name__ == "__main__":
    main()
