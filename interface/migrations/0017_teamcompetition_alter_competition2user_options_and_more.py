# Generated by Django 5.0.3 on 2025-02-25 21:05

import django.db.models.deletion
import interface.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('interface', '0016_remove_competition_issued_labs_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamCompetition',
            fields=[
                ('competition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='interface.competition')),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
            },
            bases=('interface.competition',),
        ),
        migrations.AlterModelOptions(
            name='competition2user',
            options={'verbose_name': 'Задание участника', 'verbose_name_plural': 'Задания участников'},
        ),
        migrations.AddField(
            model_name='competition2user',
            name='done',
            field=models.BooleanField(default=False, verbose_name='Завершено'),
        ),
        migrations.AddField(
            model_name='competition2user',
            name='tasks',
            field=models.ManyToManyField(blank=True, related_name='assigned_tasks', to='interface.labtask', verbose_name='Задания'),
        ),
        migrations.AlterField(
            model_name='competition',
            name='slug',
            field=models.SlugField(max_length=255, unique=True, verbose_name='Название в адресной строке'),
        ),
        migrations.AlterField(
            model_name='competition2user',
            name='competition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competition_users', to='interface.competition'),
        ),
        migrations.AlterField(
            model_name='lab',
            name='platform',
            field=models.CharField(choices=interface.models.get_platform_choices, default='NO', max_length=3, verbose_name='Платформа'),
        ),
        migrations.AlterField(
            model_name='lab',
            name='slug',
            field=models.SlugField(max_length=255, unique=True, verbose_name='Название в адресной строке'),
        ),
        migrations.AlterField(
            model_name='platoon',
            name='number',
            field=models.IntegerField(unique=True, verbose_name='Номер взвода'),
        ),
        migrations.CreateModel(
            name='Kkz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название ККЗ')),
                ('start', models.DateTimeField(verbose_name='Начало')),
                ('finish', models.DateTimeField(verbose_name='Окончание')),
                ('unified_tasks', models.BooleanField(default=False, verbose_name='Единые задания для всех')),
                ('non_platoon_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Студенты')),
                ('platoons', models.ManyToManyField(blank=True, to='interface.platoon', verbose_name='Взвода')),
            ],
            options={
                'verbose_name': 'ККЗ',
                'verbose_name_plural': 'ККЗ',
            },
        ),
        migrations.AddField(
            model_name='competition',
            name='kkz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='interface.kkz', verbose_name='ККЗ'),
        ),
        migrations.CreateModel(
            name='KkzLab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_tasks', models.PositiveIntegerField(default=1, verbose_name='Количество заданий для распределения')),
                ('kkz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kkz_labs', to='interface.kkz')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interface.lab', verbose_name='Лабораторная работа')),
                ('tasks', models.ManyToManyField(blank=True, to='interface.labtask', verbose_name='Задания')),
            ],
            options={
                'verbose_name': 'Лабораторная работа в ККЗ',
                'verbose_name_plural': 'Лабораторные работы в ККЗ',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Название в адресной строке')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='TeamCompetition2Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competition_teams', to='interface.teamcompetition')),
                ('tasks', models.ManyToManyField(blank=True, to='interface.labtask', verbose_name='Задания')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_competitions', to='interface.team')),
            ],
        ),
        migrations.AddField(
            model_name='teamcompetition',
            name='teams',
            field=models.ManyToManyField(blank=True, through='interface.TeamCompetition2Team', to='interface.team', verbose_name='Команды'),
        ),
    ]
